@import 'breakpoints';
@import 'colours';
@import '../typography.json';

/* @todo Change these font declarations to just "Ciutadella" with normal/bold alised to different variants. */

/* Copyright (c) 2016 by Eduardo Manso. All rights reserved.
 * This software is the property of Emtype Foundry and may not be reproduced, used, displayed, modified, disclosed or transferred.
 * For use these Webfonts you may obtain a valid license at http://www.emtype.net */
 
 @font-face {
  font-family: 'Ciutadella Regular';
  src: url('/etc/designs/qbr/font/QaCi1000-Rg.eot'); /* IE9 Compat Modes */
  src: url('/etc/designs/qbr/font/QaCi1000-Rg.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('/etc/designs/qbr/font/QaCi1000-Rg.woff2') format('woff2'), /* Modern Browsers */
       url('/etc/designs/qbr/font/QaCi1000-Rg.woff') format('woff'), /* Modern Browsers */
       url('/etc/designs/qbr/font/QaCi1000-Rg.ttf') format('truetype'), /* Safari, Android, iOS */
       url('/etc/designs/qbr/font/QaCi1000-Rg.svg#font') format('svg'); /* Legacy iOS */
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}

@font-face {
  font-family: 'Ciutadella Medium';
  src: url('/etc/designs/qbr/font/QaCi1000-Md.eot'); /* IE9 Compat Modes */
  src: url('/etc/designs/qbr/font/QaCi1000-Md.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('/etc/designs/qbr/font/QaCi1000-Md.woff2') format('woff2'), /* Modern Browsers */
       url('/etc/designs/qbr/font/QaCi1000-Md.woff') format('woff'), /* Modern Browsers */
       url('/etc/designs/qbr/font/QaCi1000-Md.ttf') format('truetype'), /* Safari, Android, iOS */
       url('/etc/designs/qbr/font/QaCi1000-Md.svg#font') format('svg'); /* Legacy iOS */
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}

$global-font-family: $globalFontFamily;
$global-font-family-medium: 'Ciutadella Medium', $globalFontFamily;
$global-font-size: $baseFontSize;

/* @todo Get rid of AEM LESS files and include a full reset separately. */

h1, h2, h3, h4, h5, h6, p {
  padding: 0;
  margin: 0;
}

body, button, input, select, textarea {
  color: $color-charcoal;
  font-family: $globalFontFamily;
  font-size: $baseFontSize;
}

h1, h3, h4, h5, h6 {
  font-family: $global-font-family-medium;
  font-weight: normal;
}

h1 {
  font-size: 32px; line-height: 44px;
  @include breakpoint(tablet) { font-size: 42px; line-height: 52px; };
  @include breakpoint(desktop) { font-size: 46px; line-height: 56px; };
}

h2 {
  font-family: $global-font-family;
  font-weight: normal;
  font-size: 26px; line-height: 36px;
  @include breakpoint(desktop) { font-size: 30px; line-height: 40px; };
}

h3 {
  font-size: 22px; line-height: 32px;
  @include breakpoint(desktop) { font-size: 22px; line-height: 33px; };
}

h4 {
  font-size: 18px; line-height: 28px;
  @include breakpoint(desktop) { font-size: 18px; line-height: 28px; };
}
 
body, p {
  font-size: 18px; line-height: 28px;
  @include breakpoint(desktop) { font-size: 18px; line-height: 28px; };
}

/* @todo Deprecate the following: */

@function stripUnits($number) {
  @return $number / ($number * 0 + 1);
}

@mixin calculateVerticalSpacing($font1, $lineHeight1, $font2, $lineHeight2, $spacing) {
  $verticalSpacing1: (((stripUnits($font1) * $lineHeight1) - stripUnits($font1)) / 2) * 1;
  $verticalSpacing2: (((stripUnits($font2) * $lineHeight2) - stripUnits($font2)) / 2) * 1;
  $newSpacing: stripUnits($spacing) - $verticalSpacing1 - $verticalSpacing2;
  margin-bottom: $newSpacing * 1px;
}

@function getLineHeightSpacing($fontSize, $lineHeight, $spacing) {
  $verticalSpacing: (stripUnits($lineHeight) - stripUnits($fontSize)) / 2;
  $newSpacing: stripUnits($spacing) - $verticalSpacing;
  @return $newSpacing * 1px;
}

@mixin fontstyleText($fontname, $fontSize, $lineHeight, $breakpoint: '') {
  @if $breakpoint == '' {
    font: #{$fontSize}/#{$lineHeight} #{$fontname};
    @content;
  } @else {
    @include breakpoint($breakpoint) {
      font: #{$fontSize}/#{$lineHeight} #{$fontname};
      @content;
    }
  }
}

@mixin textHeading2 () {
  @include fontstyleText($global-font-family, 30px, 40px, desktop);
  @include fontstyleText($global-font-family, 26px, 36px, tabletold);
  @include fontstyleText($global-font-family, 26px, 36px,mobileonly);
  font-weight: 500;
}
